// System call number 2 for Free user Page
if(R1 == FREE_USER_AREA_PAGE) then
	backup;

	R1 = RELEASE_PAGE;
	R2 = [PROCESS_TABLE + R2*16 + 11];

	call MOD_2;
	restore;
	return;
endif;
// System Call number 3 for Exit process
if(R1 == 3) then
	// If modeflag is 9 then it means exit process called from Exec sys call
	if([PROCESS_TABLE + R2*16 + 9] != 9) then
		alias i R10;
		i = 0;
		while(i < 16) do
			if([PROCESS_TABLE + i*16 + 4] == WAIT_PROCESS && [PROCESS_TABLE + i*16 + 5] == R2) then
				[PROCESS_TABLE + i*16 + 4] = READY;
			endif;
			if([PROCESS_TABLE + i*16 + 2] == R2) then
				[PROCESS_TABLE + i*16 + 2] = -1;
			endif;
		i = i+1;
		endwhile;
	endif;

	backup;

	R1 = FREE_USER_AREA_PAGE;

	call MOD_1;
	
	restore;
	
	backup;
	
	R1 = FREE_PAGE_TABLE;

	call MOD_1;

	restore;
	[PROCESS_TABLE + R2*16 + 4] = TERMINATED;
	return;
endif;

if(R1 == FREE_PAGE_TABLE) then
	backup;
	alias i R3;
	
	i = 2;
	while(i < 10) do
		if([PAGE_TABLE_BASE + R2*20 + 2*i] != -1) then
			backup;
			// Release Page
			R1 = 2;
			R2 = [PAGE_TABLE_BASE + 20*R2 + 2*i];
			
			call MOD_2;
			
			restore;
			
			[PAGE_TABLE_BASE + 20*R2 + 2*i] = -1;
			[PAGE_TABLE_BASE + 20*R2 + 2*i+1] = "0000";
		endif;
		i = i+1;
	endwhile;

	if([DISK_MAP_TABLE + 10 * R2 + 2] != -1) then
		backup;
		R1 = 2;
		R3 = R2;
		R2 = [DISK_MAP_TABLE + 10 * R3 + 2];
		call MOD_2;
		restore;
	endif;
	
	if([DISK_MAP_TABLE + 10 * R2 + 3] != -1) then
		backup;
		R1 = 2;
		R3 = R2;
		R2 = [DISK_MAP_TABLE + 10 * R3 + 3];
		call MOD_2;
		restore;
	endif;
	
	if([DISK_MAP_TABLE + 10 * R2 + 8] != -1) then
		backup;
		R1 = 2;
		R3 = R2;
		R2 = [DISK_MAP_TABLE + 10 * R2 + 8];
		call MOD_2;
		restore;
	endif;
	
	if([DISK_MAP_TABLE + 10 * R2 + 9] != -1) then
		backup;
		R1 = 2;
		R3 = R2;
		R2 = [DISK_MAP_TABLE + 10 * R2 + 9];
		call MOD_2;
		restore;
	endif;
	
	i = 0;
	while(i<10) do
		[DISK_MAP_TABLE + 10 * R2 + i] = -1;
		i = i+1;
	endwhile;
	restore;
	
	return;
endif;

if (R1 == GET_PCB_ENTRY) then
	
	R4 = 0;
	R0 = -1;
	while ( R4 < 16) do
		if( [PROCESS_TABLE + R4 * 16 + 4] == TERMINATED) then
			R0 = R4;
			[PROCESS_TABLE + 16 * R4 + 4] = ALLOCATED;
			[PROCESS_TABLE + 16 * R4 + 1] = R4;
			[PROCESS_TABLE + 16 * R4 + 14] = PAGE_TABLE_BASE + R4 * 20;
			[PROCESS_TABLE + 16 * R4 + 15] = 10;
			return;
		endif;
		R4 = R4 + 1;
	endwhile;
	
	return;
endif;

